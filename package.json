{
    "name": "vscode-lua-vu",
    "displayName": "Vua",
    "description": "An unofficial Visual Studio Code extension for Venice Unleashed Lua functionality",
    "version": "0.3.0",
    "publisher": "Imposter",
    "icon": "VuaIcon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/Imposter/vscode-lua-vu"
    },
    "license": "MIT",
    "engines": {
        "vscode": "^1.43.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onCommand:vua.showMenu",
        "onLanguage:lua"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "commands": [
            {
                "command": "vua.showMenu",
                "title": "Vua Commands"
            }
        ],
        "languages": [
            {
                "id": "lua",
                "aliases": [
                    "Lua"
                ],
                "extensions": [
                    ".lua"
                ]
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Vua",
            "properties": {
                "vua.interface.showErrors": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show intermediate file errors when a file has bad syntax and cannot be generated. You can get the same functionality when rebuilding intermediate files."
                },
                "vua.generation.disable": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Disable intermediate code generation. IntelliSense quality may deteriorate as a result of setting this to true."
                },
                "vua.generation.forceGlobal": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Forcefully define classes in a global context. This allows you to define classes as `class('MyObject')` rather than `MyObject = class('MyObject')` and have full type information generated for them"
                }
            }
        }
    },
    "extensionDependencies": [
        "sumneko.lua",
        "mindaro-dev.file-downloader"
    ],
    "scripts": {
        "build": "npm run-script compile_grammar && npm run-script compile",
        "compile_grammar": "cd src/code-gen/parser && antlr4ts -listener LuaLexer.g4 LuaParser.g4 -o generated",
        "compile": "tsc -b",
        "watch": "tsc -b -w",
        "test": "mocha --require ts-node/register --timeout 3600000 test/**/*.test.ts"
    },
    "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/js-yaml": "^4.0.0",
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.9.2",
        "@types/throttle-debounce": "^2.1.0",
        "@types/vscode": "^1.43.0",
        "antlr4ts-cli": "^0.5.0-alpha.4",
        "mocha": "^9.1.3",
        "tslint": "^6.1.0",
        "typescript": "^3.8.3"
    },
    "dependencies": {
        "@microsoft/vscode-file-downloader-api": "^1.0.1",
        "antlr4ts": "^0.5.0-alpha.4",
        "fs-extra": "^9.0.1",
        "glob": "^7.1.6",
        "js-yaml": "^4.0.0",
        "recursive-copy": "^2.0.11",
        "throttle-debounce": "^3.0.1"
    }
}
